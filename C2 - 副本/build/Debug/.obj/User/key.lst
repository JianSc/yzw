###############################################################################
#
# IAR C/C++ Compiler V3.11.1.207 for STM8                 28/Jan/2024  21:49:11
# Copyright 2010-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for STMicroelectronics STM8
#
#    Source file  =  .\User\key.c
#    Command line =  
#        -f
#        c:\Users\Administrator\Desktop\–¬Ω®Œƒº˛º–\C\build\Debug\.obj\User\key.args.txt
#        (--silent -lCN .\build\Debug\.obj\User\key.lst -I "d:/Program Files
#        (x86)/IAR Systems/STM8" -I "d:/Program Files (x86)/IAR
#        Systems/STM8/stm8/lib" -I Lib/H -I Lib/C -I User -D STM8S003
#        --data_model medium --code_model medium --dlib_config dlstm8smn.h -e
#        --vregs 16 -On --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_cross_call --debug --dependencies=m + -o
#        .\build\Debug\.obj\User\key.o .\User\key.c)
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  .\build\Debug\.obj\User\key.lst
#    Object file  =  .\build\Debug\.obj\User\key.o
#
###############################################################################

c:\Users\Administrator\Desktop\–¬Ω®Œƒº˛º–\C\User\key.c
      1          #include "key.h"
      2          
      3          // btn[0] ‰∏∫ÂêØÂä®/ÂÅúÊ≠¢ÊåâÈíÆ, btn[1] ËÆæÁΩÆÊåâÈíÆ, btn[2] +ÊåâÈíÆÔºå btn[3] -ÊåâÈíÆ, btn[4] Á°ÆÂÆö/ÁÅØÂÖâÊåâÈíÆ.
      4          // u8 btn[] = {0x44, 0x4c, 0x54, 0x5c, 0x64};
      5          extern bool LED_STATUS;
      6          extern bool CONFIG_STATUS;
      7          extern uint8_t LED7CodeL[];
      8          extern bool TEM_STATUS;
      9          extern bool HF_STATUS;
     10          
     11          extern int TEM_SUM;
     12          extern u8 FAN_PWM_NUM;
     13          

   \                                 In section .near.bss, align 1
     14          bool KEY_DOWN;
   \                     KEY_DOWN:
   \   000000              DS8 1

   \                                 In section .near.data, align 1
     15          u8 KEY_TYPE = 0x11;
   \                     KEY_TYPE:
   \   000000 11           DC8 17

   \                                 In section .near.bss, align 1
     16          bool CONFIG_LED_STATUS = FALSE;
   \                     CONFIG_LED_STATUS:
   \   000000              DS8 1

   \                                 In section .near.bss, align 1
     17          bool syswhile = FALSE;
   \                     syswhile:
   \   000000              DS8 1
     18          
     19          // TODO:TM1650-LEDÁ†Å	   0	 1		2     3     4     5    6     7     8     9     A     B     C     D     E     F	  P 	-
     20          // LED7codeH ÂÖ±Èò≥ , LED7codeL ÂÖ±Èò¥
     21          // uint8_t LED7CodeH[] = {~0x3f, ~0x06, ~0x5b, ~0x4f, ~0x66, ~0x6d, ~0x7d, ~0x07, ~0x7f, ~0x6f, ~0x77, ~0x7c, ~0x39, ~0x5e, ~0x79, ~0x71, ~0x73, ~0x40};
     22          // uint8_t LED7CodeL[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71, 0x73, 0x40};
     23          
     24          void config_tem();
     25          void config_fan();
     26          void config_hf();
     27          

   \                                 In section .far_func.text, align 1
     28          void btn_down(u8 key)
     29          {
   \                     btn_down:
   \   000000 3B ....      PUSH      S:?b8
   \   000003 B7 ..        LD        S:?b8, A
     30              if (!KEY_DOWN)
   \   000005 C6 ....      LD        A, L:KEY_DOWN
   \   000008 4D           TNZ       A
   \   000009 27 03        JREQ      ??lb_6
   \   00000B CC ....      JP        L:??btn_down_0
     31              {
     32                  switch (key)
   \                     ??lb_6:
   \   00000E B6 ..        LD        A, S:?b8
   \   000010 A1 44        CP        A, #0x44
   \   000012 27 38        JREQ      L:??btn_down_1
   \   000014 A1 4C        CP        A, #0x4c
   \   000016 27 61        JREQ      L:??btn_down_2
   \   000018 A1 64        CP        A, #0x64
   \   00001A 27 03        JREQ      L:??btn_down_3
   \   00001C CC ....      JP        L:??btn_down_0
     33                  {
     34                  case 0x64:
     35                      delay_ms(10);
   \                     ??btn_down_3:
   \   00001F AE 000A      LDW       X, #0xa
   \   000022 8D ......    CALLF     delay_ms
     36                      if (tm1650_displaykeyR() == 0x64)
   \   000026 8D ......    CALLF     tm1650_displaykeyR
   \   00002A A1 64        CP        A, #0x64
   \   00002C 26 1B        JRNE      L:??btn_down_4
     37                      {
     38                          LED_STATUS = !LED_STATUS;
   \   00002E C6 ....      LD        A, L:LED_STATUS
   \   000031 4D           TNZ       A
   \   000032 26 06        JRNE      L:??btn_down_5
   \   000034 35 01 ....   MOV       L:LED_STATUS, #0x1
   \   000038 20 04        JRA       L:??btn_down_6
   \                     ??btn_down_5:
   \   00003A 725F ....    CLR       L:LED_STATUS
     39                          FLASH_DATA_LED_STATUS_WRITE(LED_STATUS);
   \                     ??btn_down_6:
   \   00003E C6 ....      LD        A, L:LED_STATUS
   \   000041 8D ......    CALLF     FLASH_DATA_LED_STATUS_WRITE
     40                          KEY_DOWN = TRUE;
   \   000045 35 01 ....   MOV       L:KEY_DOWN, #0x1
     41                      }
     42                      break;
   \                     ??btn_down_4:
   \   000049 CC ....      JP        L:??btn_down_0
     43                  case 0x44:
     44                      delay_ms(10);
   \                     ??btn_down_1:
   \   00004C AE 000A      LDW       X, #0xa
   \   00004F 8D ......    CALLF     delay_ms
     45                      if (tm1650_displaykeyR() == 0x44)
   \   000053 8D ......    CALLF     tm1650_displaykeyR
   \   000057 A1 44        CP        A, #0x44
   \   000059 26 1B        JRNE      L:??btn_down_7
     46                      {
     47                          TEM_STATUS = !TEM_STATUS;
   \   00005B C6 ....      LD        A, L:TEM_STATUS
   \   00005E 4D           TNZ       A
   \   00005F 26 06        JRNE      L:??btn_down_8
   \   000061 35 01 ....   MOV       L:TEM_STATUS, #0x1
   \   000065 20 04        JRA       L:??btn_down_9
   \                     ??btn_down_8:
   \   000067 725F ....    CLR       L:TEM_STATUS
     48                          FLASH_DATA_TEM_STATUS_WRTIE(TEM_STATUS);
   \                     ??btn_down_9:
   \   00006B C6 ....      LD        A, L:TEM_STATUS
   \   00006E 8D ......    CALLF     FLASH_DATA_TEM_STATUS_WRTIE
     49                          KEY_DOWN = TRUE;
   \   000072 35 01 ....   MOV       L:KEY_DOWN, #0x1
     50                      }
     51                      break;
   \                     ??btn_down_7:
   \   000076 CC ....      JP        L:??btn_down_0
     52                  case 0x4c:
     53                      if (!TEM_STATUS)
   \                     ??btn_down_2:
   \   000079 C6 ....      LD        A, L:TEM_STATUS
   \   00007C 4D           TNZ       A
   \   00007D 27 03        JREQ      ??lb_7
   \   00007F CC ....      JP        L:??btn_down_10
     54                      {
     55                          delay_ms(10);
   \                     ??lb_7:
   \   000082 AE 000A      LDW       X, #0xa
   \   000085 8D ......    CALLF     delay_ms
     56                          if (tm1650_displaykeyR() == 0x4c)
   \   000089 8D ......    CALLF     tm1650_displaykeyR
   \   00008D A1 4C        CP        A, #0x4c
   \   00008F 27 03        JREQ      ??lb_8
   \   000091 CC ....      JP        L:??btn_down_10
     57                          {
     58                              KEY_DOWN = TRUE;
   \                     ??lb_8:
   \   000094 35 01 ....   MOV       L:KEY_DOWN, #0x1
     59                              syswhile = TRUE;
   \   000098 35 01 ....   MOV       L:syswhile, #0x1
     60                              tm1650_displayW(0, 0x00);
   \   00009C 3F ..        CLR       S:?b0
   \   00009E 4F           CLR       A
   \   00009F 8D ......    CALLF     tm1650_displayW
     61                              tm1650_displayW(1, LED7CodeL[16]);
   \   0000A3 55 .... .... MOV       S:?b0, L:LED7CodeL + 16
   \   0000A8 A6 01        LD        A, #0x1
   \   0000AA 8D ......    CALLF     tm1650_displayW
     62                              while (syswhile)
   \                     ??btn_down_11:
   \   0000AE C6 ....      LD        A, L:syswhile
   \   0000B1 4D           TNZ       A
   \   0000B2 26 03        JRNE      ??lb_9
   \   0000B4 CC ....      JP        L:??btn_down_10
     63                              {
     64                                  if (!KEY_DOWN)
   \                     ??lb_9:
   \   0000B7 C6 ....      LD        A, L:KEY_DOWN
   \   0000BA 4D           TNZ       A
   \   0000BB 27 03        JREQ      ??lb_10
   \   0000BD CC ....      JP        L:??btn_down_12
     65                                  {
     66                                      key = tm1650_displaykeyR();
   \                     ??lb_10:
   \   0000C0 8D ......    CALLF     tm1650_displaykeyR
   \   0000C4 B7 ..        LD        S:?b8, A
     67                                      switch (key)
   \   0000C6 B6 ..        LD        A, S:?b8
   \   0000C8 A1 4C        CP        A, #0x4c
   \   0000CA 27 06        JREQ      L:??btn_down_13
   \   0000CC A1 64        CP        A, #0x64
   \   0000CE 27 42        JREQ      L:??btn_down_14
   \   0000D0 20 74        JRA       L:??btn_down_12
     68                                      {
     69                                      case 0x4c:
     70                                          delay_ms(10);
   \                     ??btn_down_13:
   \   0000D2 AE 000A      LDW       X, #0xa
   \   0000D5 8D ......    CALLF     delay_ms
     71                                          if (tm1650_displaykeyR() == 0x4c)
   \   0000D9 8D ......    CALLF     tm1650_displaykeyR
   \   0000DD A1 4C        CP        A, #0x4c
   \   0000DF 26 2F        JRNE      L:??btn_down_15
     72                                          {
     73                                              static u8 i;
     74          #ifdef FAN_HF_START
     75                                              i++;
     76                                              i = (i > 3) ? 1 : i;
     77                                              switch (i)
     78                                              {
     79                                              case 1:
     80                                                  KEY_TYPE = 0x11;
     81                                                  break;
     82                                              case 2:
     83                                                  KEY_TYPE = 0x22;
     84                                                  break;
     85                                              case 3:
     86                                                  KEY_TYPE = 0x33;
     87                                                  break;
     88                                              }
     89          #else
     90                                              i++;
   \   0000E1 725C ....    INC       L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`
     91                                              i = (i > 2) ? 1 : i;
   \   0000E5 C6 ....      LD        A, L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`
   \   0000E8 A1 03        CP        A, #0x3
   \   0000EA 25 06        JRC       L:??btn_down_16
   \   0000EC 35 01 ....   MOV       L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`, #0x1
   \   0000F0 20 05        JRA       L:??btn_down_17
   \                     ??btn_down_16:
   \   0000F2 55 .... .... MOV       L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`, L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`
     92                                              switch (i)
   \                     ??btn_down_17:
   \   0000F7 C6 ....      LD        A, L:`btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`
   \   0000FA 4A           DEC       A
   \   0000FB 27 05        JREQ      L:??btn_down_18
   \   0000FD 4A           DEC       A
   \   0000FE 27 08        JREQ      L:??btn_down_19
   \   000100 20 0A        JRA       L:??btn_down_20
     93                                              {
     94                                              case 1:
     95                                                  KEY_TYPE = 0x11;
   \                     ??btn_down_18:
   \   000102 35 11 ....   MOV       L:KEY_TYPE, #0x11
     96                                                  break;
   \   000106 20 04        JRA       L:??btn_down_20
     97                                              case 2:
     98                                                  KEY_TYPE = 0x22;
   \                     ??btn_down_19:
   \   000108 35 22 ....   MOV       L:KEY_TYPE, #0x22
     99                                                  break;
    100                                              }
    101          #endif
    102                                              KEY_DOWN = TRUE;
   \                     ??btn_down_20:
   \   00010C 35 01 ....   MOV       L:KEY_DOWN, #0x1
    103                                          }
    104                                          break;
   \                     ??btn_down_15:
   \   000110 20 34        JRA       L:??btn_down_12
    105                                      case 0x64:
    106                                          delay_ms(10);
   \                     ??btn_down_14:
   \   000112 AE 000A      LDW       X, #0xa
   \   000115 8D ......    CALLF     delay_ms
    107                                          if (tm1650_displaykeyR() == 0x64)
   \   000119 8D ......    CALLF     tm1650_displaykeyR
   \   00011D A1 64        CP        A, #0x64
   \   00011F 26 25        JRNE      L:??btn_down_21
    108                                          {
    109                                              KEY_DOWN = TRUE;
   \   000121 35 01 ....   MOV       L:KEY_DOWN, #0x1
    110                                              switch (KEY_TYPE)
   \   000125 C6 ....      LD        A, L:KEY_TYPE
   \   000128 A1 11        CP        A, #0x11
   \   00012A 27 0A        JREQ      L:??btn_down_22
   \   00012C A1 22        CP        A, #0x22
   \   00012E 27 0C        JREQ      L:??btn_down_23
   \   000130 A1 33        CP        A, #0x33
   \   000132 27 0E        JREQ      L:??btn_down_24
   \   000134 20 10        JRA       L:??btn_down_21
    111                                              {
    112                                                  // ËÆæÁΩÆÊ∏©Â∫¶
    113                                              case 0x11:
    114                                                  config_tem();
   \                     ??btn_down_22:
   \   000136 8D ......    CALLF     config_tem
    115                                                  break;
   \   00013A 20 0A        JRA       L:??btn_down_21
    116                                                  // ËÆæÁΩÆÈ£éÊâáËΩ¨ÈÄü
    117                                              case 0x22:
    118                                                  config_fan();
   \                     ??btn_down_23:
   \   00013C 8D ......    CALLF     config_fan
    119                                                  break;
   \   000140 20 04        JRA       L:??btn_down_21
    120                                                  // Êç¢Ê∞îÂäüËÉΩ
    121                                              case 0x33:
    122                                                  config_hf();
   \                     ??btn_down_24:
   \   000142 8D ......    CALLF     config_hf
    123                                                  break;
    124                                              }
    125                                          }
    126                                          break;
    127                                      }
    128                                  }
    129                                  switch (KEY_TYPE)
   \                     ??btn_down_21:
   \                     ??btn_down_12:
   \   000146 C6 ....      LD        A, L:KEY_TYPE
   \   000149 A1 11        CP        A, #0x11
   \   00014B 27 07        JREQ      L:??btn_down_25
   \   00014D A1 22        CP        A, #0x22
   \   00014F 27 11        JREQ      L:??btn_down_26
   \   000151 CC ....      JP        L:??btn_down_11
    130                                  {
    131                                  case 0x11:
    132                                      tm1650_displayW(2, LED7CodeL[1]);
   \                     ??btn_down_25:
   \   000154 55 .... .... MOV       S:?b0, L:LED7CodeL + 1
   \   000159 A6 02        LD        A, #0x2
   \   00015B 8D ......    CALLF     tm1650_displayW
    133                                      break;
   \   00015F CC ....      JP        L:??btn_down_11
    134                                  case 0x22:
    135                                      tm1650_displayW(2, LED7CodeL[2]);
   \                     ??btn_down_26:
   \   000162 55 .... .... MOV       S:?b0, L:LED7CodeL + 2
   \   000167 A6 02        LD        A, #0x2
   \   000169 8D ......    CALLF     tm1650_displayW
    136                                      break;
   \   00016D CC ....      JP        L:??btn_down_11
    137                                  }
    138                              }
    139                          }
    140                      }
    141                      break;
    142                  }
    143              }
    144          }
   \                     ??btn_down_10:
   \                     ??btn_down_0:
   \   000170 32 ....      POP       S:?b8
   \   000173 87           RETF

   \                                 In section .near.bss, align 1
   \                     `btn_down{1}{2}{3}{4}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}::i`:
   \   000000              DS8 1
    145          
    146          // ËÆæÁΩÆÊ∏©Â∫¶
    147          // btn[0] ‰∏∫ÂêØÂä®/ÂÅúÊ≠¢ÊåâÈíÆ, btn[1] ËÆæÁΩÆÊåâÈíÆ, btn[2] +ÊåâÈíÆÔºå btn[3] -ÊåâÈíÆ, btn[4] Á°ÆÂÆö/ÁÅØÂÖâÊåâÈíÆ.
    148          // u8 btn[] = {0x44, 0x4c, 0x54, 0x5c, 0x64};

   \                                 In section .far_func.text, align 1
    149          void config_tem()
    150          {
   \                     config_tem:
   \   000000 8D ......    CALLF     L:?push_l2
    151              CONFIG_STATUS = TRUE;
   \   000004 35 01 ....   MOV       L:CONFIG_STATUS, #0x1
    152              bool whileback = FALSE;
   \   000008 3F ..        CLR       S:?b10
    153              int sum = TEM_SUM;
   \   00000A CE ....      LDW       X, L:TEM_SUM
   \   00000D BF ..        LDW       S:?w4, X
    154              while (1)
    155              {
    156                  if (CONFIG_LED_STATUS)
   \                     ??config_tem_0:
   \   00000F C6 ....      LD        A, L:CONFIG_LED_STATUS
   \   000012 4D           TNZ       A
   \   000013 27 06        JREQ      L:??config_tem_1
    157                  {
    158                      tm1650_displayOn();
   \   000015 8D ......    CALLF     tm1650_displayOn
   \   000019 20 04        JRA       L:??config_tem_2
    159                  }
    160                  else
    161                  {
    162                      tm1650_displayOff();
   \                     ??config_tem_1:
   \   00001B 8D ......    CALLF     tm1650_displayOff
    163                  }
    164                  tm1650_displayW(0, LED7CodeL[sum / 100 % 100]);
   \                     ??config_tem_2:
   \   00001F 90AE 0064    LDW       Y, #0x64
   \   000023 BE ..        LDW       X, S:?w4
   \   000025 8D ......    CALLF     L:?sdiv16_x_x_y
   \   000029 90AE 0064    LDW       Y, #0x64
   \   00002D 8D ......    CALLF     L:?smod16_y_x_y
   \   000031 93           LDW       X, Y
   \   000032 D6 ....      LD        A, (L:LED7CodeL,X)
   \   000035 B7 ..        LD        S:?b0, A
   \   000037 4F           CLR       A
   \   000038 8D ......    CALLF     tm1650_displayW
    165                  tm1650_displayW(1, (LED7CodeL[sum / 10 % 10]) | 0x80);
   \   00003C 90AE 000A    LDW       Y, #0xa
   \   000040 BE ..        LDW       X, S:?w4
   \   000042 8D ......    CALLF     L:?sdiv16_x_x_y
   \   000046 90AE 000A    LDW       Y, #0xa
   \   00004A 8D ......    CALLF     L:?smod16_y_x_y
   \   00004E 93           LDW       X, Y
   \   00004F D6 ....      LD        A, (L:LED7CodeL,X)
   \   000052 AA 80        OR        A, #0x80
   \   000054 B7 ..        LD        S:?b0, A
   \   000056 A6 01        LD        A, #0x1
   \   000058 8D ......    CALLF     tm1650_displayW
    166                  tm1650_displayW(2, LED7CodeL[sum % 10]);
   \   00005C 90AE 000A    LDW       Y, #0xa
   \   000060 BE ..        LDW       X, S:?w4
   \   000062 8D ......    CALLF     L:?smod16_y_x_y
   \   000066 93           LDW       X, Y
   \   000067 D6 ....      LD        A, (L:LED7CodeL,X)
   \   00006A B7 ..        LD        S:?b0, A
   \   00006C A6 02        LD        A, #0x2
   \   00006E 8D ......    CALLF     tm1650_displayW
    167                  if (!KEY_DOWN)
   \   000072 C6 ....      LD        A, L:KEY_DOWN
   \   000075 4D           TNZ       A
   \   000076 27 03        JREQ      ??lb_4
   \   000078 CC ....      JP        L:??config_tem_3
    168                  {
    169                      u8 key = tm1650_displaykeyR();
   \                     ??lb_4:
   \   00007B 8D ......    CALLF     tm1650_displaykeyR
   \   00007F B7 ..        LD        S:?b11, A
    170                      switch (key)
   \   000081 B6 ..        LD        A, S:?b11
   \   000083 A1 4C        CP        A, #0x4c
   \   000085 27 0F        JREQ      L:??config_tem_4
   \   000087 A1 54        CP        A, #0x54
   \   000089 27 49        JREQ      L:??config_tem_5
   \   00008B A1 5C        CP        A, #0x5c
   \   00008D 27 6D        JREQ      L:??config_tem_6
   \   00008F A1 64        CP        A, #0x64
   \   000091 27 1C        JREQ      L:??config_tem_7
   \   000093 CC ....      JP        L:??config_tem_3
    171                      {
    172                      case 0x4c:
    173                          delay_ms(10);
   \                     ??config_tem_4:
   \   000096 AE 000A      LDW       X, #0xa
   \   000099 8D ......    CALLF     delay_ms
    174                          if (tm1650_displaykeyR() == 0x4c)
   \   00009D 8D ......    CALLF     tm1650_displaykeyR
   \   0000A1 A1 4C        CP        A, #0x4c
   \   0000A3 26 08        JRNE      L:??config_tem_8
    175                          {
    176                              KEY_DOWN = TRUE;
   \   0000A5 35 01 ....   MOV       L:KEY_DOWN, #0x1
    177                              whileback = TRUE;
   \   0000A9 A6 01        LD        A, #0x1
   \   0000AB B7 ..        LD        S:?b10, A
    178                          }
    179                          break;
   \                     ??config_tem_8:
   \   0000AD 20 73        JRA       L:??config_tem_3
    180                      case 0x64:
    181                          delay_ms(10);
   \                     ??config_tem_7:
   \   0000AF AE 000A      LDW       X, #0xa
   \   0000B2 8D ......    CALLF     delay_ms
    182                          if (tm1650_displaykeyR() == 0x64)
   \   0000B6 8D ......    CALLF     tm1650_displaykeyR
   \   0000BA A1 64        CP        A, #0x64
   \   0000BC 26 14        JRNE      L:??config_tem_9
    183                          {
    184                              KEY_DOWN = TRUE;
   \   0000BE 35 01 ....   MOV       L:KEY_DOWN, #0x1
    185                              TEM_SUM = sum;
   \   0000C2 BE ..        LDW       X, S:?w4
   \   0000C4 CF ....      LDW       L:TEM_SUM, X
    186                              FLASH_DATA_TEM_SUM_WRITE(TEM_SUM);
   \   0000C7 CE ....      LDW       X, L:TEM_SUM
   \   0000CA 8D ......    CALLF     FLASH_DATA_TEM_SUM_WRITE
    187                              whileback = TRUE;
   \   0000CE A6 01        LD        A, #0x1
   \   0000D0 B7 ..        LD        S:?b10, A
    188                          }
    189                          break;
   \                     ??config_tem_9:
   \   0000D2 20 4E        JRA       L:??config_tem_3
    190                      case 0x54:
    191                          delay_ms(10);
   \                     ??config_tem_5:
   \   0000D4 AE 000A      LDW       X, #0xa
   \   0000D7 8D ......    CALLF     delay_ms
    192                          if (tm1650_displaykeyR() == 0x54)
   \   0000DB 8D ......    CALLF     tm1650_displaykeyR
   \   0000DF A1 54        CP        A, #0x54
   \   0000E1 26 17        JRNE      L:??config_tem_10
    193                          {
    194                              KEY_DOWN = TRUE;
   \   0000E3 35 01 ....   MOV       L:KEY_DOWN, #0x1
    195                              sum++;
   \   0000E7 BE ..        LDW       X, S:?w4
   \   0000E9 5C           INCW      X
   \   0000EA BF ..        LDW       S:?w4, X
    196                              sum = (sum > 500) ? 500 : sum;
   \   0000EC BE ..        LDW       X, S:?w4
   \   0000EE A3 01F5      CPW       X, #0x1f5
   \   0000F1 2F 07        JRSLT     L:??config_tem_11
   \   0000F3 AE 01F4      LDW       X, #0x1f4
   \   0000F6 BF ..        LDW       S:?w4, X
   \   0000F8 20 00        JRA       L:??config_tem_10
    197                          }
    198                          break;
   \                     ??config_tem_11:
   \                     ??config_tem_10:
   \   0000FA 20 26        JRA       L:??config_tem_3
    199                      case 0x5c:
    200                          delay_ms(10);
   \                     ??config_tem_6:
   \   0000FC AE 000A      LDW       X, #0xa
   \   0000FF 8D ......    CALLF     delay_ms
    201                          if (tm1650_displaykeyR() == 0x5c)
   \   000103 8D ......    CALLF     tm1650_displaykeyR
   \   000107 A1 5C        CP        A, #0x5c
   \   000109 26 17        JRNE      L:??config_tem_12
    202                          {
    203                              KEY_DOWN = TRUE;
   \   00010B 35 01 ....   MOV       L:KEY_DOWN, #0x1
    204                              sum--;
   \   00010F BE ..        LDW       X, S:?w4
   \   000111 5A           DECW      X
   \   000112 BF ..        LDW       S:?w4, X
    205                              sum = (sum < 100) ? 100 : sum;
   \   000114 BE ..        LDW       X, S:?w4
   \   000116 A3 0064      CPW       X, #0x64
   \   000119 2E 07        JRSGE     L:??config_tem_13
   \   00011B AE 0064      LDW       X, #0x64
   \   00011E BF ..        LDW       S:?w4, X
   \   000120 20 00        JRA       L:??config_tem_12
    206                          }
    207                          break;
    208                      }
    209                  }
    210                  if (whileback)
   \                     ??config_tem_13:
   \                     ??config_tem_12:
   \                     ??config_tem_3:
   \   000122 3D ..        TNZ       S:?b10
   \   000124 26 03        JRNE      ??lb_5
   \   000126 CC ....      JP        L:??config_tem_0
    211                  {
    212                      CONFIG_STATUS = FALSE;
   \                     ??lb_5:
   \   000129 725F ....    CLR       L:CONFIG_STATUS
    213                      syswhile = FALSE;
   \   00012D 725F ....    CLR       L:syswhile
    214                      tm1650_displayOn();
   \   000131 8D ......    CALLF     tm1650_displayOn
    215                      break;
    216                  }
    217              }
    218          }
   \   000135 AC ......    JPF       L:?epilogue_l2
    219          
    220          // ËÆæÁΩÆÈ£éÊâáËΩ¨ÈÄü

   \                                 In section .far_func.text, align 1
    221          void config_fan()
    222          {
   \                     config_fan:
   \   000000 8D ......    CALLF     L:?push_l2
    223              CONFIG_STATUS = TRUE;
   \   000004 35 01 ....   MOV       L:CONFIG_STATUS, #0x1
    224              bool whileback = FALSE;
   \   000008 3F ..        CLR       S:?b10
    225              int sum = FAN_PWM_NUM;
   \   00000A C6 ....      LD        A, L:FAN_PWM_NUM
   \   00000D 3F ..        CLR       S:?b8
   \   00000F B7 ..        LD        S:?b9, A
    226              while (1)
    227              {
    228                  if (CONFIG_LED_STATUS)
   \                     ??config_fan_0:
   \   000011 C6 ....      LD        A, L:CONFIG_LED_STATUS
   \   000014 4D           TNZ       A
   \   000015 27 06        JREQ      L:??config_fan_1
    229                  {
    230                      tm1650_displayOn();
   \   000017 8D ......    CALLF     tm1650_displayOn
   \   00001B 20 04        JRA       L:??config_fan_2
    231                  }
    232                  else
    233                  {
    234                      tm1650_displayOff();
   \                     ??config_fan_1:
   \   00001D 8D ......    CALLF     tm1650_displayOff
    235                  }
    236                  if ((sum / 100 % 100) == 0)
   \                     ??config_fan_2:
   \   000021 90AE 0064    LDW       Y, #0x64
   \   000025 BE ..        LDW       X, S:?w4
   \   000027 8D ......    CALLF     L:?sdiv16_x_x_y
   \   00002B 90AE 0064    LDW       Y, #0x64
   \   00002F 8D ......    CALLF     L:?smod16_y_x_y
   \   000033 905D         TNZW      Y
   \   000035 26 09        JRNE      L:??config_fan_3
    237                  {
    238                      tm1650_displayW(0, 0x00);
   \   000037 3F ..        CLR       S:?b0
   \   000039 4F           CLR       A
   \   00003A 8D ......    CALLF     tm1650_displayW
   \   00003E 20 1D        JRA       L:??config_fan_4
    239                  }
    240                  else
    241                  {
    242                      tm1650_displayW(0, LED7CodeL[sum / 100 % 100]);
   \                     ??config_fan_3:
   \   000040 90AE 0064    LDW       Y, #0x64
   \   000044 BE ..        LDW       X, S:?w4
   \   000046 8D ......    CALLF     L:?sdiv16_x_x_y
   \   00004A 90AE 0064    LDW       Y, #0x64
   \   00004E 8D ......    CALLF     L:?smod16_y_x_y
   \   000052 93           LDW       X, Y
   \   000053 D6 ....      LD        A, (L:LED7CodeL,X)
   \   000056 B7 ..        LD        S:?b0, A
   \   000058 4F           CLR       A
   \   000059 8D ......    CALLF     tm1650_displayW
    243                  }
    244                  tm1650_displayW(1, LED7CodeL[sum / 10 % 10]);
   \                     ??config_fan_4:
   \   00005D 90AE 000A    LDW       Y, #0xa
   \   000061 BE ..        LDW       X, S:?w4
   \   000063 8D ......    CALLF     L:?sdiv16_x_x_y
   \   000067 90AE 000A    LDW       Y, #0xa
   \   00006B 8D ......    CALLF     L:?smod16_y_x_y
   \   00006F 93           LDW       X, Y
   \   000070 D6 ....      LD        A, (L:LED7CodeL,X)
   \   000073 B7 ..        LD        S:?b0, A
   \   000075 A6 01        LD        A, #0x1
   \   000077 8D ......    CALLF     tm1650_displayW
    245                  tm1650_displayW(2, LED7CodeL[sum % 10]);
   \   00007B 90AE 000A    LDW       Y, #0xa
   \   00007F BE ..        LDW       X, S:?w4
   \   000081 8D ......    CALLF     L:?smod16_y_x_y
   \   000085 93           LDW       X, Y
   \   000086 D6 ....      LD        A, (L:LED7CodeL,X)
   \   000089 B7 ..        LD        S:?b0, A
   \   00008B A6 02        LD        A, #0x2
   \   00008D 8D ......    CALLF     tm1650_displayW
    246                  if (!KEY_DOWN)
   \   000091 C6 ....      LD        A, L:KEY_DOWN
   \   000094 4D           TNZ       A
   \   000095 27 03        JREQ      ??lb_1
   \   000097 CC ....      JP        L:??config_fan_5
    247                  {
    248                      u8 key = tm1650_displaykeyR();
   \                     ??lb_1:
   \   00009A 8D ......    CALLF     tm1650_displaykeyR
   \   00009E B7 ..        LD        S:?b11, A
    249                      switch (key)
   \   0000A0 B6 ..        LD        A, S:?b11
   \   0000A2 A1 4C        CP        A, #0x4c
   \   0000A4 27 12        JREQ      L:??config_fan_6
   \   0000A6 A1 54        CP        A, #0x54
   \   0000A8 27 5F        JREQ      L:??config_fan_7
   \   0000AA A1 5C        CP        A, #0x5c
   \   0000AC 26 03        JRNE      ??lb_2
   \   0000AE CC ....      JP        L:??config_fan_8
   \                     ??lb_2:
   \   0000B1 A1 64        CP        A, #0x64
   \   0000B3 27 26        JREQ      L:??config_fan_9
   \   0000B5 CC ....      JP        L:??config_fan_5
    250                      {
    251                      case 0x4c:
    252                          delay_ms(10);
   \                     ??config_fan_6:
   \   0000B8 AE 000A      LDW       X, #0xa
   \   0000BB 8D ......    CALLF     delay_ms
    253                          if (tm1650_displaykeyR() == 0x4c)
   \   0000BF 8D ......    CALLF     tm1650_displaykeyR
   \   0000C3 A1 4C        CP        A, #0x4c
   \   0000C5 26 11        JRNE      L:??config_fan_10
    254                          {
    255                              KEY_DOWN = TRUE;
   \   0000C7 35 01 ....   MOV       L:KEY_DOWN, #0x1
    256                              whileback = TRUE;
   \   0000CB A6 01        LD        A, #0x1
   \   0000CD B7 ..        LD        S:?b10, A
    257                              TIM2_SetCompare3(FAN_PWM_NUM);
   \   0000CF C6 ....      LD        A, L:FAN_PWM_NUM
   \   0000D2 5F           CLRW      X
   \   0000D3 97           LD        XL, A
   \   0000D4 8D ......    CALLF     TIM2_SetCompare3
    258                          }
    259                          break;
   \                     ??config_fan_10:
   \   0000D8 CC ....      JP        L:??config_fan_5
    260                      case 0x64:
    261                          delay_ms(10);
   \                     ??config_fan_9:
   \   0000DB AE 000A      LDW       X, #0xa
   \   0000DE 8D ......    CALLF     delay_ms
    262                          if (tm1650_displaykeyR() == 0x64)
   \   0000E2 8D ......    CALLF     tm1650_displaykeyR
   \   0000E6 A1 64        CP        A, #0x64
   \   0000E8 26 1D        JRNE      L:??config_fan_11
    263                          {
    264                              KEY_DOWN = TRUE;
   \   0000EA 35 01 ....   MOV       L:KEY_DOWN, #0x1
    265                              FAN_PWM_NUM = sum;
   \   0000EE B6 ..        LD        A, S:?b9
   \   0000F0 C7 ....      LD        L:FAN_PWM_NUM, A
    266                              FLASH_DATA_FAN_PWM_WRITE(FAN_PWM_NUM);
   \   0000F3 C6 ....      LD        A, L:FAN_PWM_NUM
   \   0000F6 8D ......    CALLF     FLASH_DATA_FAN_PWM_WRITE
    267                              TIM2_SetCompare3(FAN_PWM_NUM);
   \   0000FA C6 ....      LD        A, L:FAN_PWM_NUM
   \   0000FD 5F           CLRW      X
   \   0000FE 97           LD        XL, A
   \   0000FF 8D ......    CALLF     TIM2_SetCompare3
    268                              whileback = TRUE;
   \   000103 A6 01        LD        A, #0x1
   \   000105 B7 ..        LD        S:?b10, A
    269                          }
    270                          break;
   \                     ??config_fan_11:
   \   000107 20 5A        JRA       L:??config_fan_5
    271                      case 0x54:
    272                          delay_ms(10);
   \                     ??config_fan_7:
   \   000109 AE 000A      LDW       X, #0xa
   \   00010C 8D ......    CALLF     delay_ms
    273                          if (tm1650_displaykeyR() == 0x54)
   \   000110 8D ......    CALLF     tm1650_displaykeyR
   \   000114 A1 54        CP        A, #0x54
   \   000116 26 1D        JRNE      L:??config_fan_12
    274                          {
    275                              KEY_DOWN = TRUE;
   \   000118 35 01 ....   MOV       L:KEY_DOWN, #0x1
    276                              sum++;
   \   00011C BE ..        LDW       X, S:?w4
   \   00011E 5C           INCW      X
   \   00011F BF ..        LDW       S:?w4, X
    277                              sum = (sum > 100) ? 100 : sum;
   \   000121 BE ..        LDW       X, S:?w4
   \   000123 A3 0065      CPW       X, #0x65
   \   000126 2F 07        JRSLT     L:??config_fan_13
   \   000128 AE 0064      LDW       X, #0x64
   \   00012B BF ..        LDW       S:?w4, X
   \   00012D 20 00        JRA       L:??config_fan_14
    278                              TIM2_SetCompare3(sum);
   \                     ??config_fan_13:
   \                     ??config_fan_14:
   \   00012F BE ..        LDW       X, S:?w4
   \   000131 8D ......    CALLF     TIM2_SetCompare3
    279                          }
    280                          break;
   \                     ??config_fan_12:
   \   000135 20 2C        JRA       L:??config_fan_5
    281                      case 0x5c:
    282                          delay_ms(10);
   \                     ??config_fan_8:
   \   000137 AE 000A      LDW       X, #0xa
   \   00013A 8D ......    CALLF     delay_ms
    283                          if (tm1650_displaykeyR() == 0x5c)
   \   00013E 8D ......    CALLF     tm1650_displaykeyR
   \   000142 A1 5C        CP        A, #0x5c
   \   000144 26 1D        JRNE      L:??config_fan_15
    284                          {
    285                              KEY_DOWN = TRUE;
   \   000146 35 01 ....   MOV       L:KEY_DOWN, #0x1
    286                              sum--;
   \   00014A BE ..        LDW       X, S:?w4
   \   00014C 5A           DECW      X
   \   00014D BF ..        LDW       S:?w4, X
    287                              sum = (sum < 50) ? 50 : sum;
   \   00014F BE ..        LDW       X, S:?w4
   \   000151 A3 0032      CPW       X, #0x32
   \   000154 2E 07        JRSGE     L:??config_fan_16
   \   000156 AE 0032      LDW       X, #0x32
   \   000159 BF ..        LDW       S:?w4, X
   \   00015B 20 00        JRA       L:??config_fan_17
    288                              TIM2_SetCompare3(sum);
   \                     ??config_fan_16:
   \                     ??config_fan_17:
   \   00015D BE ..        LDW       X, S:?w4
   \   00015F 8D ......    CALLF     TIM2_SetCompare3
    289                          }
    290                          break;
    291                      }
    292                  }
    293                  if (whileback)
   \                     ??config_fan_15:
   \                     ??config_fan_5:
   \   000163 3D ..        TNZ       S:?b10
   \   000165 26 03        JRNE      ??lb_3
   \   000167 CC ....      JP        L:??config_fan_0
    294                  {
    295                      CONFIG_STATUS = FALSE;
   \                     ??lb_3:
   \   00016A 725F ....    CLR       L:CONFIG_STATUS
    296                      syswhile = FALSE;
   \   00016E 725F ....    CLR       L:syswhile
    297                      tm1650_displayOn();
   \   000172 8D ......    CALLF     tm1650_displayOn
    298                      break;
    299                  }
    300              }
    301          }
   \   000176 AC ......    JPF       L:?epilogue_l2
    302          
    303          // ÂºÄÂÖ≥Êç¢Ê∞îÂäüËÉΩ

   \                                 In section .far_func.text, align 1
    304          void config_hf()
    305          {
   \                     config_hf:
   \   000000 8D ......    CALLF     L:?push_w4
   \   000004 3B ....      PUSH      S:?b10
    306              bool whileback = FALSE;
   \   000007 3F ..        CLR       S:?b8
    307              bool bol_hf = HF_STATUS;
   \   000009 55 .... .... MOV       S:?b9, L:HF_STATUS
    308              tm1650_displayOn();
   \   00000E 8D ......    CALLF     tm1650_displayOn
    309              while (1)
    310              {
    311                  tm1650_displayW(0, 0x00);
   \                     ??config_hf_0:
   \   000012 3F ..        CLR       S:?b0
   \   000014 4F           CLR       A
   \   000015 8D ......    CALLF     tm1650_displayW
    312                  tm1650_displayW(1, LED7CodeL[14]);
   \   000019 55 .... .... MOV       S:?b0, L:LED7CodeL + 14
   \   00001E A6 01        LD        A, #0x1
   \   000020 8D ......    CALLF     tm1650_displayW
    313                  if (HF_STATUS)
   \   000024 C6 ....      LD        A, L:HF_STATUS
   \   000027 4D           TNZ       A
   \   000028 27 0D        JREQ      L:??config_hf_1
    314                  {
    315                      tm1650_displayW(2, LED7CodeL[1]);
   \   00002A 55 .... .... MOV       S:?b0, L:LED7CodeL + 1
   \   00002F A6 02        LD        A, #0x2
   \   000031 8D ......    CALLF     tm1650_displayW
   \   000035 20 0B        JRA       L:??config_hf_2
    316                  }
    317                  else
    318                  {
    319                      tm1650_displayW(2, LED7CodeL[0]);
   \                     ??config_hf_1:
   \   000037 55 .... .... MOV       S:?b0, L:LED7CodeL
   \   00003C A6 02        LD        A, #0x2
   \   00003E 8D ......    CALLF     tm1650_displayW
    320                  }
    321          
    322                  if (!KEY_DOWN)
   \                     ??config_hf_2:
   \   000042 C6 ....      LD        A, L:KEY_DOWN
   \   000045 4D           TNZ       A
   \   000046 26 76        JRNE      L:??config_hf_3
    323                  {
    324                      u8 key = tm1650_displaykeyR();
   \   000048 8D ......    CALLF     tm1650_displaykeyR
   \   00004C B7 ..        LD        S:?b10, A
    325                      switch (key)
   \   00004E B6 ..        LD        A, S:?b10
   \   000050 A1 4C        CP        A, #0x4c
   \   000052 27 06        JREQ      L:??config_hf_4
   \   000054 A1 64        CP        A, #0x64
   \   000056 27 39        JREQ      L:??config_hf_5
   \   000058 20 64        JRA       L:??config_hf_3
    326                      {
    327                      case 0x4c:
    328                          delay_ms(10);
   \                     ??config_hf_4:
   \   00005A AE 000A      LDW       X, #0xa
   \   00005D 8D ......    CALLF     delay_ms
    329                          if (tm1650_displaykeyR() == 0x4c)
   \   000061 8D ......    CALLF     tm1650_displaykeyR
   \   000065 A1 4C        CP        A, #0x4c
   \   000067 26 26        JRNE      L:??config_hf_6
    330                          {
    331                              KEY_DOWN = TRUE;
   \   000069 35 01 ....   MOV       L:KEY_DOWN, #0x1
    332                              if (bol_hf)
   \   00006D 3D ..        TNZ       S:?b9
   \   00006F 27 0F        JREQ      L:??config_hf_7
    333                              {
    334                                  bol_hf = FALSE;
   \   000071 3F ..        CLR       S:?b9
    335                                  tm1650_displayW(2, LED7CodeL[0]);
   \   000073 55 .... .... MOV       S:?b0, L:LED7CodeL
   \   000078 A6 02        LD        A, #0x2
   \   00007A 8D ......    CALLF     tm1650_displayW
   \   00007E 20 0F        JRA       L:??config_hf_6
    336                              }
    337                              else
    338                              {
    339                                  bol_hf = TRUE;
   \                     ??config_hf_7:
   \   000080 A6 01        LD        A, #0x1
   \   000082 B7 ..        LD        S:?b9, A
    340                                  tm1650_displayW(2, LED7CodeL[1]);
   \   000084 55 .... .... MOV       S:?b0, L:LED7CodeL + 1
   \   000089 A6 02        LD        A, #0x2
   \   00008B 8D ......    CALLF     tm1650_displayW
    341                              }
    342                          }
    343                          break;
   \                     ??config_hf_6:
   \   00008F 20 2D        JRA       L:??config_hf_3
    344                      case 0x64:
    345                          delay_ms(10);
   \                     ??config_hf_5:
   \   000091 AE 000A      LDW       X, #0xa
   \   000094 8D ......    CALLF     delay_ms
    346                          if (tm1650_displaykeyR() == 0x64)
   \   000098 8D ......    CALLF     tm1650_displaykeyR
   \   00009C A1 64        CP        A, #0x64
   \   00009E 26 1E        JRNE      L:??config_hf_8
    347                          {
    348                              KEY_DOWN = TRUE;
   \   0000A0 35 01 ....   MOV       L:KEY_DOWN, #0x1
    349                              if (bol_hf)
   \   0000A4 3D ..        TNZ       S:?b9
   \   0000A6 27 08        JREQ      L:??config_hf_9
    350                              {
    351                                  FLASH_DATA_HF_STATUS_WRITE(TRUE);
   \   0000A8 A6 01        LD        A, #0x1
   \   0000AA 8D ......    CALLF     FLASH_DATA_HF_STATUS_WRITE
   \   0000AE 20 05        JRA       L:??config_hf_10
    352                              }
    353                              else
    354                              {
    355                                  FLASH_DATA_HF_STATUS_WRITE(FALSE);
   \                     ??config_hf_9:
   \   0000B0 4F           CLR       A
   \   0000B1 8D ......    CALLF     FLASH_DATA_HF_STATUS_WRITE
    356                              }
    357                              HF_STATUS = bol_hf;
   \                     ??config_hf_10:
   \   0000B5 B6 ..        LD        A, S:?b9
   \   0000B7 C7 ....      LD        L:HF_STATUS, A
    358                              whileback = TRUE;
   \   0000BA A6 01        LD        A, #0x1
   \   0000BC B7 ..        LD        S:?b8, A
    359                          }
    360                          break;
    361                      }
    362                  }
    363                  if (whileback)
   \                     ??config_hf_8:
   \                     ??config_hf_3:
   \   0000BE 3D ..        TNZ       S:?b8
   \   0000C0 26 03        JRNE      ??lb_0
   \   0000C2 CC ....      JP        L:??config_hf_0
    364                  {
    365                      syswhile = FALSE;
   \                     ??lb_0:
   \   0000C5 725F ....    CLR       L:syswhile
    366                      break;
    367                  }
    368              }
    369          }
   \   0000C9 32 ....      POP       S:?b10
   \   0000CC AC ......    JPF       L:?epilogue_w4

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  CONFIG_LED_STATUS
       1  KEY_DOWN
       1  KEY_TYPE
     372  btn_down
     378  config_fan
     208  config_hf
     313  config_tem
       1  i
       1  syswhile

 
 1 271 bytes in section .far_func.text
     4 bytes in section .near.bss
     1 byte  in section .near.data
 
 1 271 bytes of CODE memory
     5 bytes of DATA memory

Errors: none
Warnings: 260
