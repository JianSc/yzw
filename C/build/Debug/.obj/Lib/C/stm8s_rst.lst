###############################################################################
#
# IAR C/C++ Compiler V3.11.1.207 for STM8                 19/Jan/2024  20:42:43
# Copyright 2010-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for STMicroelectronics STM8
#
#    Source file  =  .\Lib\C\stm8s_rst.c
#    Command line =  
#        -f "e:\Nas\电路\保温箱\YZW-S805-EE22(Rev1.0) -
#        KF7620\C\build\Debug\.obj\Lib\C\stm8s_rst.args.txt" (--silent -lCN
#        .\build\Debug\.obj\Lib\C\stm8s_rst.lst -I d:/IAR/STM8/stm8/inc -I
#        d:/IAR/STM8/stm8/lib -I Lib/H -I Lib/C -I User -D STM8S005
#        --data_model medium --code_model medium --dlib_config dlstm8smn.h -e
#        --vregs 16 -On --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_cross_call --debug --dependencies=m + -o
#        .\build\Debug\.obj\Lib\C\stm8s_rst.o .\Lib\C\stm8s_rst.c)
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  .\build\Debug\.obj\Lib\C\stm8s_rst.lst
#    Object file  =  .\build\Debug\.obj\Lib\C\stm8s_rst.o
#
###############################################################################

e:\Nas\电路\保温箱\YZW-S805-EE22(Rev1.0) - KF7620\C\Lib\C\stm8s_rst.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8s_rst.c
      4            * @author  MCD Application Team
      5            * @version V2.3.0
      6            * @date    16-June-2017
      7            * @brief   This file contains all the functions for the RST peripheral.
      8             ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          
     30          #include "stm8s_rst.h"
     31          
     32          /** @addtogroup STM8S_StdPeriph_Driver
     33            * @{
     34            */
     35          /* Private typedef -----------------------------------------------------------*/
     36          /* Private define ------------------------------------------------------------*/
     37          /* Private macro -------------------------------------------------------------*/
     38          /* Private variables ---------------------------------------------------------*/
     39          /* Private function prototypes -----------------------------------------------*/
     40          /* Private Constants ---------------------------------------------------------*/
     41          /* Public functions ----------------------------------------------------------*/
     42          /**
     43            * @addtogroup RST_Public_Functions
     44            * @{
     45            */
     46          
     47          
     48          /**
     49            * @brief   Checks whether the specified RST flag is set or not.
     50            * @param   RST_Flag : specify the reset flag to check.
     51            *          This parameter can be a value of @ref RST_Flag_TypeDef.
     52            * @retval  FlagStatus: status of the given RST flag.
     53            */

   \                                 In section .far_func.text, align 1
     54          FlagStatus RST_GetFlagStatus(RST_Flag_TypeDef RST_Flag)
     55          {
   \                     RST_GetFlagStatus:
   \   000000 3B ....      PUSH      S:?b8
   \   000003 B7 ..        LD        S:?b8, A
     56            /* Check the parameters */
     57            assert_param(IS_RST_FLAG_OK(RST_Flag));
   \   000005 B6 ..        LD        A, S:?b8
   \   000007 A1 10        CP        A, #0x10
   \   000009 27 27        JREQ      L:??RST_GetFlagStatus_0
   \   00000B B6 ..        LD        A, S:?b8
   \   00000D A1 08        CP        A, #0x8
   \   00000F 27 21        JREQ      L:??RST_GetFlagStatus_0
   \   000011 B6 ..        LD        A, S:?b8
   \   000013 A1 04        CP        A, #0x4
   \   000015 27 1B        JREQ      L:??RST_GetFlagStatus_0
   \   000017 B6 ..        LD        A, S:?b8
   \   000019 A1 02        CP        A, #0x2
   \   00001B 27 15        JREQ      L:??RST_GetFlagStatus_0
   \   00001D B6 ..        LD        A, S:?b8
   \   00001F A1 01        CP        A, #0x1
   \   000021 27 0F        JREQ      L:??RST_GetFlagStatus_0
   \   000023 AE 0039      LDW       X, #0x39
   \   000026 BF ..        LDW       S:?w1, X
   \   000028 5F           CLRW      X
   \   000029 BF ..        LDW       S:?w0, X
   \   00002B AE ....      LDW       X, #?_0
   \   00002E 8D ......    CALLF     assert_failed
     58            
     59            /* Get flag status */
     60            return((FlagStatus)(((uint8_t)(RST->SR & RST_Flag) == (uint8_t)0x00) ? RESET : SET));
   \                     ??RST_GetFlagStatus_0:
   \   000032 C6 50B3      LD        A, L:0x50b3
   \   000035 B4 ..        AND       A, S:?b8
   \   000037 A1 00        CP        A, #0x0
   \   000039 26 03        JRNE      L:??RST_GetFlagStatus_1
   \   00003B 4F           CLR       A
   \   00003C 20 02        JRA       L:??RST_GetFlagStatus_2
   \                     ??RST_GetFlagStatus_1:
   \   00003E A6 01        LD        A, #0x1
   \                     ??RST_GetFlagStatus_2:
   \   000040 32 ....      POP       S:?b8
   \   000043 87           RETF
     61          }
     62          
     63          /**
     64            * @brief  Clears the specified RST flag.
     65            * @param  RST_Flag : specify the reset flag to clear.
     66            *         This parameter can be a value of @ref RST_Flag_TypeDef.
     67            * @retval None
     68            */

   \                                 In section .far_func.text, align 1
     69          void RST_ClearFlag(RST_Flag_TypeDef RST_Flag)
     70          {
   \                     RST_ClearFlag:
   \   000000 3B ....      PUSH      S:?b8
   \   000003 B7 ..        LD        S:?b8, A
     71            /* Check the parameters */
     72            assert_param(IS_RST_FLAG_OK(RST_Flag));
   \   000005 B6 ..        LD        A, S:?b8
   \   000007 A1 10        CP        A, #0x10
   \   000009 27 27        JREQ      L:??RST_ClearFlag_0
   \   00000B B6 ..        LD        A, S:?b8
   \   00000D A1 08        CP        A, #0x8
   \   00000F 27 21        JREQ      L:??RST_ClearFlag_0
   \   000011 B6 ..        LD        A, S:?b8
   \   000013 A1 04        CP        A, #0x4
   \   000015 27 1B        JREQ      L:??RST_ClearFlag_0
   \   000017 B6 ..        LD        A, S:?b8
   \   000019 A1 02        CP        A, #0x2
   \   00001B 27 15        JREQ      L:??RST_ClearFlag_0
   \   00001D B6 ..        LD        A, S:?b8
   \   00001F A1 01        CP        A, #0x1
   \   000021 27 0F        JREQ      L:??RST_ClearFlag_0
   \   000023 AE 0048      LDW       X, #0x48
   \   000026 BF ..        LDW       S:?w1, X
   \   000028 5F           CLRW      X
   \   000029 BF ..        LDW       S:?w0, X
   \   00002B AE ....      LDW       X, #?_0
   \   00002E 8D ......    CALLF     assert_failed
     73            
     74            RST->SR = (uint8_t)RST_Flag;
   \                     ??RST_ClearFlag_0:
   \   000032 B6 ..        LD        A, S:?b8
   \   000034 C7 50B3      LD        L:0x50b3, A
     75          }
   \   000037 32 ....      POP       S:?b8
   \   00003A 87           RETF

   \                                 In section .near.rodata, align 1
   \                     ?_0:
   \   000000 2E 5C 4C 69  DC8 ".\\Lib\\C\\stm8s_rst.c"
   \          62 5C 43 5C 
     76          
     77          /**
     78            * @}
     79            */
     80            
     81          /**
     82            * @}
     83            */
     84            
     85          
     86          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?_0
      59  RST_ClearFlag
      68  RST_GetFlagStatus

 
 127 bytes in section .far_func.text
  20 bytes in section .near.rodata
 
 127 bytes of CODE  memory
  20 bytes of CONST memory

Errors: none
Warnings: none
